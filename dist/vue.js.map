{"version":3,"file":"vue.js","sources":["../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export function initState(vm){\r\n    const ops = vm.$options;\r\n    if(ops.data){\r\n        initData(vm);\r\n    }\r\n}\r\n\r\nfunction initData(vm){\r\n    console.log('初始化数据')\r\n}","import { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue){\r\n    // 后续组件化开发的时候 Vue.extend 可以创造一个子组件 子组件可以继承Vue,子组件也可以调用_init方法\r\n    Vue.prototype._init = function(options){\r\n        const vm = this;\r\n        \r\n        //把用户的选项放在 vm上,这样在其他方法中都可以获取到options\r\n        vm.$options = options;//为了后续扩展的方法 都可以获取到$optios\r\n\r\n        // options 中用户传入数据el ，data\r\n        initState(vm);\r\n        if(vm.$options.el){\r\n            // 要降数据挂载到页面上\r\n            console.log('页面要挂载')\r\n        }\r\n        console.log(options,3443);\r\n    }\r\n}","import { initMixin } from './init';\r\n\r\n//vue 要如何实现 原型模式 所有的功能都通过原型扩展的方式来添加 \r\nfunction Vue(options) {\r\n    this._init(options); //实现初始化vue\r\n}\r\n\r\n// 初始化\r\ninitMixin(Vue);\r\n\r\n// 导出vue给别人使用\r\nexport default Vue;"],"names":["initState","vm","ops","$options","data","initData","console","log","initMixin","Vue","prototype","_init","options","el"],"mappings":";;;;;;IAAO,SAASA,SAAT,CAAmBC,EAAnB,EAAsB;IACzB,QAAMC,GAAG,GAAGD,EAAE,CAACE,QAAf;;IACA,MAAGD,GAAG,CAACE,IAAP,EAAY;IACRC,IAAAA,QAAQ,CAAA,CAAR;IACH;IACJ;;IAED,SAASA,QAAT,CAAkBJ,EAAlB,EAAqB;IACjBK,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;IACH;;ICPM,SAASC,SAAT,CAAmBC,GAAnB,EAAuB;IAC1B;IACAA,EAAAA,GAAG,CAACC,SAAJ,CAAcC,KAAd,GAAsB,UAASC,OAAT,EAAiB;IACnC,UAAMX,EAAE,GAAG,IAAX,CADmC;;IAInCA,IAAAA,EAAE,CAACE,QAAH,GAAcS,OAAd,CAJmC;IAMnC;;IACAZ,IAAAA,SAAS,CAACC,EAAD,CAAT;;IACA,QAAGA,EAAE,CAACE,QAAH,CAAYU,EAAf,EAAkB;IACd;IACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;IACH;;IACDD,IAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ,EAAoB,IAApB;IACH,GAbD;IAcH;;ICfD,SAASH,GAAT,CAAaG,OAAb,EAAsB;IAClB,OAAKD,KAAL,CAAWC,OAAX,EADkB;;IAErB;;;IAGDJ,SAAS,CAACC,GAAD,CAAT;;;;;;;;"}