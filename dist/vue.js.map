{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["//判断是否是函数\r\nexport function isFunction(val) {\r\n    return typeof val === 'function';\r\n}\r\n\r\n//判断是否是对象\r\nexport function isObject(val) {\r\n    return typeof val === 'object' && val !== null;\r\n}","import { isObject } from \"../utils\";\r\n\r\nexport function observe(value) {\r\n    // 1.如果value不是对象，就不用观测了\r\n    console.log(isObject(value));\r\n}","import {\r\n    observe\r\n} from \"./observe/index\";\r\nimport {\r\n    isFunction\r\n} from \"./utils\";\r\n\r\nexport function initState(vm) {\r\n    const ops = vm.$options;\r\n    if (ops.data) {\r\n        initData(vm);\r\n    }\r\n}\r\n\r\nfunction initData(vm) {\r\n    //用户传入数据\r\n    let data = vm.$options.data;\r\n\r\n    // 如果用户传递的是一个函数 则取函数的返回值作为对象，对象则是对象\r\n    // 只有根实例data可以是一个对象\r\n    data = isFunction(data) ? data.call(vm) : data;\r\n\r\n    observe(data);\r\n    console.log('初始化数据')\r\n}","import { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) {\r\n    // 后续组件化开发的时候 Vue.extend 可以创造一个子组件 子组件可以继承Vue,子组件也可以调用_init方法\r\n    Vue.prototype._init = function(options) {\r\n        const vm = this;\r\n\r\n        //把用户的选项放在 vm上,这样在其他方法中都可以获取到options\r\n        vm.$options = options; //为了后续扩展的方法 都可以获取到$optios\r\n\r\n        // options 中用户传入数据el ，data\r\n        initState(vm);\r\n        if (vm.$options.el) {\r\n            // 要降数据挂载到页面上\r\n            console.log('页面要挂载')\r\n        }\r\n    }\r\n}","import { initMixin } from './init';\r\n\r\n//vue 要如何实现 原型模式 所有的功能都通过原型扩展的方式来添加 \r\nfunction Vue(options) {\r\n    this._init(options); //实现初始化vue\r\n}\r\n\r\n// 初始化\r\ninitMixin(Vue);\r\n\r\n// 导出vue给别人使用\r\nexport default Vue;\r\n\r\n// 1.new Vue 会调用_init方法进行初始化操作\r\n// 2.会将用户的选项放在vm.$options上\r\n// 3.会对当前属性上搜索有没有data数据 initState\r\n// 4.有data判断data是不是一个函数 如果是函数取返回值 initData\r\n// 5.observe取观测data中的数据\r\n\r\n// 如果el需要挂载在页面上"],"names":["isFunction","val","isObject","observe","value","console","log","initState","vm","ops","$options","data","initData","call","initMixin","Vue","prototype","_init","options","el"],"mappings":";;;;;;IAAA;IACO,SAASA,UAAT,CAAoBC,GAApB,EAAyB;IAC5B,SAAO,OAAOA,GAAP,KAAe,UAAtB;IACH;;IAGM,SAASC,QAAT,CAAkBD,GAAlB,EAAuB;IAC1B,SAAO,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAA1C;IACH;;ICNM,SAASE,OAAT,CAAiBC,KAAjB,EAAwB;IAC3B;IACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,KAAD,CAApB;IACH;;ICEM,SAASG,SAAT,CAAmBC,EAAnB,EAAuB;IAC1B,QAAMC,GAAG,GAAGD,EAAE,CAACE,QAAf;;IACA,MAAID,GAAG,CAACE,IAAR,EAAc;IACVC,IAAAA,QAAQ,CAACJ,EAAD,CAAR;IACH;IACJ;;IAED,SAASI,QAAT,CAAkBJ,EAAlB,EAAsB;IAClB;IACA,MAAIG,IAAI,GAAGH,EAAE,CAACE,QAAH,CAAYC,IAAvB,CAFkB;IAKlB;;IACAA,EAAAA,IAAI,GAAGX,UAAU,CAACW,IAAD,CAAV,GAAmBA,IAAI,CAACE,IAAL,CAAUL,EAAV,CAAnB,GAAmCG,IAA1C;IAEAR,EAAAA,OAAO,CAACQ,IAAD,CAAP;IACAN,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;IACH;;ICtBM,SAASQ,SAAT,CAAmBC,GAAnB,EAAwB;IAC3B;IACAA,EAAAA,GAAG,CAACC,SAAJ,CAAcC,KAAd,GAAsB,UAASC,OAAT,EAAkB;IACpC,UAAMV,EAAE,GAAG,IAAX,CADoC;;IAIpCA,IAAAA,EAAE,CAACE,QAAH,GAAcQ,OAAd,CAJoC;IAMpC;;IACAX,IAAAA,SAAS,CAACC,EAAD,CAAT;;IACA,QAAIA,EAAE,CAACE,QAAH,CAAYS,EAAhB,EAAoB;IAChB;IACAd,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;IACH;IACJ,GAZD;IAaH;;ICdD,SAASS,GAAT,CAAaG,OAAb,EAAsB;IAClB,OAAKD,KAAL,CAAWC,OAAX,EADkB;;IAErB;;;IAGDJ,SAAS,CAACC,GAAD,CAAT;IAMA;IACA;IACA;IACA;IAEA;;;;;;;;"}